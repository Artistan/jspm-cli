#!/usr/bin/env node
/*
 *   Copyright 2014-2019 Guy Bedford (http://guybedford.com)
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
if (!process.env.JSPM_BIN) {
  const { sep } = require('path');
  const { getPackageScope } = require('../lib/utils/common');
  const { existsSync } = require('fs');
  const scope = getPackageScope(process.cwd() + sep);
  const localBinary = scope + sep + 'jspm_packages' + sep + '.bin' + sep + 'jspm' + (process.platform === 'win32' ? '.cmd' : '');
  if (scope && existsSync(localBinary)) {
    const ps = require('child_process').spawn(localBinary, process.argv.slice(2), { stdio: 'inherit' });
    ps.on('exit', code => process.exit(code));
    ps.on('error', err => {
      console.error(err);
      process.exit(1);
    });
    return;
  }
}

const { default: cli } = require('../dist/cli');
process.once('unhandledRejection', err => {
  console.error(err);
  process.exit(1);
});
process.once('SIGINT', () => {
  console.log('jspm process terminated.');
  process.exit(1);
});
process.once('SIGTERM', () => {
  console.log('jspm process terminated.');
  process.exit(1);
});

cli([], process.argv[2], process.argv.slice(3))
.then(() => process.exit(), _err => process.exit(1));
